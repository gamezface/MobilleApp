ext {
    appCompatVersion = '1.3.0'
    constraintLayoutVersion = '2.0.4'
    daggerVersion = '2.28'
    daggerHiltCompilerVersion = '1.0.0-alpha01'
    androidArchVersion = '1.1.1'
    materialVersion = '1.3.0'
    coroutinesVersion = '1.3.9'
    navVersion = '2.3.5'
    glideVersion = '4.12.0'
    supportVersion = '28.0.0'
    lifecycleVersion = '2.2.0'
    retrofitVersion = '2.6.0'
    gsonVersion = '2.8.5'
    okHttpVersion = '3.14.0'
    workRuntimeVersion = '2.0.0'
    jUnitVersion = '4.13'
    androidTestCoreVersion = '1.3.0'

    dependencies = [
            //kotlin
            kotlinStdlib             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            coroutines               : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion",
            //app
            appCompat                : "androidx.appcompat:appcompat:$appCompatVersion",
            constraintLayout         : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            material                 : "com.google.android.material:material:$materialVersion",
            //Jetpack
            lifecycleViewModelKtx    : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            lifecycleLiveDataKtx     : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
            navigationFragmentKtx    : "androidx.navigation:navigation-fragment-ktx:$navVersion",
            navigationUiKtx          : "androidx.navigation:navigation-ui-ktx:$navVersion",
            workRuntime              : "android.arch.work:work-runtime:$workRuntimeVersion",
            // Dagger
            daggerHilt               : "com.google.dagger:hilt-android:$daggerHiltVersion",
            daggerHiltLifecycle      : "androidx.hilt:hilt-lifecycle-viewmodel:$daggerHiltCompilerVersion",
            daggerHiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$daggerHiltVersion",
            hiltCompiler             : "androidx.hilt:hilt-compiler:$daggerHiltCompilerVersion",
            //Glide
            glide                    : "com.github.bumptech.glide:glide:$glideVersion",
            glideCompiler            : "com.github.bumptech.glide:compiler:$glideVersion",
            //parse
            gson                     : "com.google.code.gson:gson:$gsonVersion",
            //Retrofit
            retrofit                 : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitConverter        : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            //OkHttp
            okHttp                   : "com.squareup.okhttp3:okhttp:$okHttpVersion",
            okHttpLog                : "com.squareup.okhttp3:logging-interceptor:$okHttpVersion",
    ]

    testDependencies = [
            // Test
            jUnit          : "junit:junit:$jUnitVersion",
            coreTesting    : "android.arch.core:core-testing:$androidArchVersion",
            androidTestCore: "androidx.test:core:$androidTestCoreVersion",
    ]

    appImplDependencies = [
            dependencies.kotlinStdlib,
            dependencies.coroutines,
            dependencies.appCompat,
            dependencies.constraintLayout,
            dependencies.material,
            dependencies.lifecycleViewModelKtx,
            dependencies.lifecycleLiveDataKtx,
            dependencies.navigationFragmentKtx,
            dependencies.navigationUiKtx,
            dependencies.daggerHilt,
            dependencies.daggerHiltLifecycle,
            dependencies.glide,
    ]

    appTestDependencies = [
            testDependencies.jUnit,
            testDependencies.coreTesting,
            testDependencies.androidTestCore,
    ]

    appKaptDependencies = [
            dependencies.daggerHiltAndroidCompiler,
            dependencies.hiltCompiler,
    ]

    appAnnotationProcessorDependencies = [
            dependencies.glideCompiler,
    ]

    domainDependencies = [
            dependencies.kotlinStdlib,
            dependencies.coroutines,
    ]

    dataDependencies = [
            dependencies.kotlinStdlib,
            dependencies.coroutines,
            dependencies.daggerHilt,
            dependencies.daggerHiltLifecycle,
            dependencies.retrofitConverter,
            dependencies.okHttpLog,
    ]

    apiDependencies = [
            dependencies.retrofit,
            dependencies.okHttp,
            dependencies.gson,
    ]
}
